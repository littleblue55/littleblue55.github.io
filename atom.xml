<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Littleblue</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-03-24T03:37:17.024Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Littleblue</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信小程序开发遇到的一些问题</title>
    <link href="http://example.com/2023/03/24/uniapp-weixin-01/"/>
    <id>http://example.com/2023/03/24/uniapp-weixin-01/</id>
    <published>2023-03-24T03:15:50.000Z</published>
    <updated>2023-03-24T03:37:17.024Z</updated>
    
    <content type="html"><![CDATA[<h2 id="微信小程序开发“渲染层错误”的解决方法"><a href="#微信小程序开发“渲染层错误”的解决方法" class="headerlink" title="微信小程序开发“渲染层错误”的解决方法"></a>微信小程序开发“渲染层错误”的解决方法</h2><p>详情-&gt;本地设置-&gt;调试基本库 ，选择一个合适的版本，就不会报错了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;微信小程序开发“渲染层错误”的解决方法&quot;&gt;&lt;a href=&quot;#微信小程序开发“渲染层错误”的解决方法&quot; class=&quot;headerlink&quot; title=&quot;微信小程序开发“渲染层错误”的解决方法&quot;&gt;&lt;/a&gt;微信小程序开发“渲染层错误”的解决方法&lt;/h2&gt;&lt;p&gt;详情</summary>
      
    
    
    
    <category term="微信小程序" scheme="http://example.com/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="uniapp" scheme="http://example.com/tags/uniapp/"/>
    
    <category term="微信小程序" scheme="http://example.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>vue：函数防抖</title>
    <link href="http://example.com/2023/03/14/Vue-Vue-03/"/>
    <id>http://example.com/2023/03/14/Vue-Vue-03/</id>
    <published>2023-03-14T07:23:56.000Z</published>
    <updated>2023-03-14T07:28:34.941Z</updated>
    
    <content type="html"><![CDATA[<h2 id="函数防抖（debounce）"><a href="#函数防抖（debounce）" class="headerlink" title="函数防抖（debounce）"></a>函数防抖（debounce）</h2><p>指触发事件后，在 n 秒内函数只能执行一次，如果触发事件后在 n 秒内又触发了事件，则会重新计算函数延执行时间</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">debounce</span>(<span class="params">fn, delay</span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> timer;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (timer) &#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">    &#125;</span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">fn</span>();</span><br><span class="line">    &#125;, delay);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实际使用"><a href="#实际使用" class="headerlink" title="实际使用"></a>实际使用</h2><p>监听窗口的宽度变化</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getCode</span>()</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="variable language_">this</span>.<span class="title function_">debounce</span>(<span class="variable language_">this</span>.<span class="property">getWindowInfo</span>, <span class="number">500</span>))</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">destroyed</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="variable language_">this</span>.<span class="title function_">debounce</span>(<span class="variable language_">this</span>.<span class="property">getWindowInfo</span>, <span class="number">500</span>))</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;函数防抖（debounce）&quot;&gt;&lt;a href=&quot;#函数防抖（debounce）&quot; class=&quot;headerlink&quot; title=&quot;函数防抖（debounce）&quot;&gt;&lt;/a&gt;函数防抖（debounce）&lt;/h2&gt;&lt;p&gt;指触发事件后，在 n 秒内函数只能执行一次，</summary>
      
    
    
    
    <category term="Vue" scheme="http://example.com/categories/Vue/"/>
    
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
    <category term="防抖" scheme="http://example.com/tags/%E9%98%B2%E6%8A%96/"/>
    
  </entry>
  
  <entry>
    <title>Vue：修改props中传过来的值</title>
    <link href="http://example.com/2023/03/14/Vue-Vue-02/"/>
    <id>http://example.com/2023/03/14/Vue-Vue-02/</id>
    <published>2023-03-14T07:15:21.000Z</published>
    <updated>2023-03-14T07:21:09.839Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sync修饰符"><a href="#sync修饰符" class="headerlink" title="sync修饰符"></a>sync修饰符</h2><p>父组件 穿进去的时候加上 .sync</p><p>子组件 通过this.$emit(‘update:xxx’, data)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line">&lt;child-component :flag.<span class="property">sync</span>=<span class="string">&quot;list&quot;</span> /&gt;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 子组件</span></span><br><span class="line"><span class="title function_">methodName</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.$emit(<span class="string">&#x27;update:flag&#x27;</span>, <span class="variable language_">this</span>.<span class="property">newflag</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>element-ui的dialog的visible</p><p><img src="image-20230314152053756.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;sync修饰符&quot;&gt;&lt;a href=&quot;#sync修饰符&quot; class=&quot;headerlink&quot; title=&quot;sync修饰符&quot;&gt;&lt;/a&gt;sync修饰符&lt;/h2&gt;&lt;p&gt;父组件 穿进去的时候加上 .sync&lt;/p&gt;
&lt;p&gt;子组件 通过this.$emit(‘update</summary>
      
    
    
    
    <category term="Vue" scheme="http://example.com/categories/Vue/"/>
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>vconsole的使用</title>
    <link href="http://example.com/2023/03/14/%E5%85%B6%E4%BB%96-vconsole/"/>
    <id>http://example.com/2023/03/14/%E5%85%B6%E4%BB%96-vconsole/</id>
    <published>2023-03-14T07:06:06.000Z</published>
    <updated>2023-03-14T07:14:23.432Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前端开发移动端时在手机上测试的时候，看不见console.log的信息，所以调用vconsole移动端调试工具</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vconsole</span><br></pre></td></tr></table></figure><h2 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VConsole</span> <span class="keyword">from</span> <span class="string">&#x27;vconsole&#x27;</span></span><br><span class="line"><span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> !== <span class="string">&#x27;production&#x27;</span>) &#123;</span><br><span class="line">  <span class="comment">// eslint-disable-next-line no-new,new-cap</span></span><br><span class="line">  <span class="keyword">const</span> vConsole = <span class="keyword">new</span> <span class="title class_">VConsole</span>()</span><br><span class="line">  <span class="title class_">Vue</span>.<span class="title function_">use</span>(vConsole)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印log</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">111</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前端开发移动端时在手机上测试的时候，看不见console.log的信息，所以调用vconsole移动端调试工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    <category term="工具" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="vconsole" scheme="http://example.com/tags/vconsole/"/>
    
  </entry>
  
  <entry>
    <title>若依菜单点不开：cannot find module &#39;@/view/system/menu/index&#39;</title>
    <link href="http://example.com/2023/03/14/%E8%8B%A5%E4%BE%9D-%E8%8B%A5%E4%BE%9D-02/"/>
    <id>http://example.com/2023/03/14/%E8%8B%A5%E4%BE%9D-%E8%8B%A5%E4%BE%9D-02/</id>
    <published>2023-03-14T06:52:50.000Z</published>
    <updated>2023-03-14T07:01:08.209Z</updated>
    
    <content type="html"><![CDATA[<p>运行若依的时候，可以运行但是点击菜单进不去，上网查了下，是webpack的版本问题</p><p><img src="image-20230314145414020.png"></p><p>解决方法：</p><p>打开src\store\modules\permission.js<br>将原本的import的写法改成require写法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">require</span>([<span class="string">`@/views/<span class="subst">$&#123;view&#125;</span>`</span>], resolve)</span><br></pre></td></tr></table></figure><p><img src="image-20230314145904537.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;运行若依的时候，可以运行但是点击菜单进不去，上网查了下，是webpack的版本问题&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;image-20230314145414020.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;p&gt;打开src\store\modules\permissi</summary>
      
    
    
    
    <category term="前端框架" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="若依" scheme="http://example.com/tags/%E8%8B%A5%E4%BE%9D/"/>
    
  </entry>
  
  <entry>
    <title>DQL数据查询</title>
    <link href="http://example.com/2023/03/07/mysql-mysql-06/"/>
    <id>http://example.com/2023/03/07/mysql-mysql-06/</id>
    <published>2023-03-07T06:03:23.000Z</published>
    <updated>2023-03-14T09:33:43.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DQL"><a href="#DQL" class="headerlink" title="DQL"></a>DQL</h2><p>(Data Query Language)数据查询语言</p><ul><li>所有的查询操作都用它 select</li><li>简单的查询，复杂的查询，它都能做</li><li>数据库中最核心的语言</li></ul><h2 id="指定查询字段"><a href="#指定查询字段" class="headerlink" title="指定查询字段"></a>指定查询字段</h2><p>格式：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `字段`,`字段` <span class="keyword">from</span> `表`</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询全部的学生  select 字段 from 表</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `student`</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询指定字段</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">FROM</span> `student`</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 给结果起个名字 AS，可以给字段起别名，也可以给表起别名</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno` <span class="keyword">AS</span> 学号 ,`studentname` <span class="keyword">AS</span> 学生名字 <span class="keyword">FROM</span> `student` <span class="keyword">AS</span> s</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="concat函数"><a href="#concat函数" class="headerlink" title="concat函数"></a>concat函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- concat函数</span></span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="string">&#x27;名字是：&#x27;</span>,`studentname`) <span class="keyword">AS</span> 名字 <span class="keyword">FROM</span> `student`</span><br></pre></td></tr></table></figure><h3 id="去重-distinct"><a href="#去重-distinct" class="headerlink" title="去重 distinct"></a>去重 distinct</h3><p>作用：去除select查询出来的结果中的重复的数据，重复的数据只显示一条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询那些同学参加了考试</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询全部的考试成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `<span class="keyword">result</span>` </span><br><span class="line"><span class="comment">-- 查询有那些同学参加了考试</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno` <span class="keyword">FROM</span> `<span class="keyword">result</span>` </span><br><span class="line"><span class="comment">-- 发现重复数据，去重</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> `studentno` <span class="keyword">from</span> `<span class="keyword">result</span>`</span><br></pre></td></tr></table></figure><h3 id="查看系统的版本"><a href="#查看系统的版本" class="headerlink" title="查看系统的版本"></a>查看系统的版本</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> VERSION()</span><br></pre></td></tr></table></figure><h3 id="计算表达式"><a href="#计算表达式" class="headerlink" title="计算表达式"></a>计算表达式</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 计算</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">56</span><span class="operator">+</span><span class="number">68</span><span class="number">-8</span> <span class="keyword">AS</span> 计算结果 <span class="comment">-- 116</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 学生的成绩全部加一分后查看</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">FROM</span> `<span class="keyword">result</span>`</span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult`<span class="operator">+</span><span class="number">1</span> <span class="keyword">AS</span> 加一分 <span class="keyword">FROM</span> `<span class="keyword">result</span>`</span><br></pre></td></tr></table></figure><blockquote><p>数据库中的表达式：文本值，列，Null，函数，计算表达式，系统变量…</p></blockquote><h2 id="where条件子句"><a href="#where条件子句" class="headerlink" title="where条件子句"></a>where条件子句</h2><p>作用：检索数据中<code>符合条件</code>的值</p><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><table><thead><tr><th>运算符</th><th>语法</th><th>描述</th></tr></thead><tbody><tr><td>and &amp;&amp;</td><td>A and B   A &amp;&amp; B</td><td>逻辑与，两个都为真，结果才为真</td></tr><tr><td>or  ||</td><td>A or B    A || B</td><td>逻辑或，其中一个为真，则结果为真</td></tr><tr><td>Not !</td><td>Not A     !A</td><td>逻辑非，真为假，假为真</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询成绩在95分以上的</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">FROM</span> `<span class="keyword">result</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">FROM</span> `<span class="keyword">result</span>`</span><br><span class="line"><span class="keyword">WHERE</span> `studentresult`<span class="operator">&gt;=</span><span class="number">95</span> <span class="keyword">AND</span> `studentresult` <span class="operator">&lt;=</span><span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">FROM</span> `<span class="keyword">result</span>`</span><br><span class="line"><span class="keyword">WHERE</span> `studentresult`<span class="operator">&gt;=</span><span class="number">95</span> <span class="operator">&amp;&amp;</span> `studentresult` <span class="operator">&lt;=</span><span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 模糊查询（区间）</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">FROM</span> `<span class="keyword">result</span>`</span><br><span class="line"><span class="keyword">WHERE</span> `studentresult` <span class="keyword">BETWEEN</span> <span class="number">95</span> <span class="keyword">AND</span> <span class="number">100</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 除了1000号同学的成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">FROM</span> `<span class="keyword">result</span>`</span><br><span class="line"><span class="keyword">WHERE</span> `studentno` <span class="operator">&lt;&gt;</span> <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">FROM</span> `<span class="keyword">result</span>`</span><br><span class="line"><span class="keyword">WHERE</span> `studentno` <span class="operator">!=</span> <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">FROM</span> `<span class="keyword">result</span>`</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">Not</span> `studentno` <span class="operator">=</span> <span class="number">1000</span></span><br></pre></td></tr></table></figure><h3 id="模糊查询：比较运算符"><a href="#模糊查询：比较运算符" class="headerlink" title="模糊查询：比较运算符"></a>模糊查询：比较运算符</h3><table><thead><tr><th>运算符</th><th>语法</th><th>描述</th></tr></thead><tbody><tr><td>IS NULL</td><td>a IS NULL</td><td>如果a为null，则为真</td></tr><tr><td>IS NOT NULL</td><td>a IS NOT NULL</td><td>如果a不为null，则为真</td></tr><tr><td>BETWEEN…AND…</td><td>BETWEEN 95 AND 100</td><td>在95和100之间，为真</td></tr><tr><td>LIKE</td><td>A LIKE B</td><td>SQL匹配，如果a匹配b，则结果为真</td></tr><tr><td>IN</td><td>a in （a1,a2,a3…）</td><td>假设a在（a1,a2,a3…）其中的某一个值，结果为真</td></tr></tbody></table><h2 id="联表查询"><a href="#联表查询" class="headerlink" title="联表查询"></a>联表查询</h2><h3 id="join对比"><a href="#join对比" class="headerlink" title="join对比"></a>join对比</h3><p><img src="D:\work\blog\source_posts\mysql\mysql-06\sql-join-all.jpg" alt="img"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询有哪些参加了考试的同学，（姓名，学号，科目编号，分数）</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">思路：</span></span><br><span class="line"><span class="comment">1.分析需求，分析查询的字段来自哪些表，(连接查询)</span></span><br><span class="line"><span class="comment">2.确定使用哪种连接查询? 7种</span></span><br><span class="line"><span class="comment">3.确定交叉点 (这两个表中哪个数据是相同的 )</span></span><br><span class="line"><span class="comment">4.判断的条件 :学生表的中 studentNo = 成绩表 studentNo</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="keyword">SELECT</span> ss.studentno,studentname,subjectno,studentresult </span><br><span class="line"><span class="keyword">FROM</span> `student` <span class="keyword">As</span> ss</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` <span class="keyword">AS</span> rr</span><br><span class="line"><span class="keyword">WHERE</span> ss.studentno <span class="operator">=</span> rr.studentno</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ss.studentno,studentname,subjectno,studentresult </span><br><span class="line"><span class="keyword">FROM</span> `student` <span class="keyword">As</span> ss</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` <span class="keyword">AS</span> rr</span><br><span class="line"><span class="keyword">ON</span> ss.studentno <span class="operator">=</span> rr.studentno</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ss.studentno,studentname,subjectno,studentresult </span><br><span class="line"><span class="keyword">FROM</span> `student` <span class="keyword">As</span> ss</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` <span class="keyword">AS</span> rr</span><br><span class="line"><span class="keyword">ON</span> ss.studentno <span class="operator">=</span> rr.studentno</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ss.studentno,studentname,subjectno,studentresult </span><br><span class="line"><span class="keyword">FROM</span> `student` <span class="keyword">As</span> ss</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` <span class="keyword">AS</span> rr</span><br><span class="line"><span class="keyword">ON</span> ss.studentno <span class="operator">=</span> rr.studentno</span><br></pre></td></tr></table></figure><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td>INNER JOIN</td><td>如果表中至少有一个匹配，就返回行</td></tr><tr><td>LEFT JOIN</td><td>会从左表中的返回所有的值，即时右表中没有</td></tr><tr><td>RIGHT JOIN</td><td>会从右表中的返回所有的值，即时左表中没有</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询缺考的同学 left join 把所有的同学都查出来，筛选没有成绩的同学</span></span><br><span class="line"><span class="keyword">SELECT</span> ss.studentno,studentname,subjectno,studentresult </span><br><span class="line"><span class="keyword">FROM</span> `student` <span class="keyword">As</span> ss <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` <span class="keyword">AS</span> rr</span><br><span class="line"><span class="keyword">ON</span> ss.studentno <span class="operator">=</span> rr.studentno</span><br><span class="line"><span class="keyword">WHERE</span> studentresult <span class="keyword">is</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查三个表</span></span><br><span class="line"><span class="keyword">SELECT</span> ss.studentno,studentname,subjectname,studentresult </span><br><span class="line"><span class="keyword">FROM</span> `student` <span class="keyword">As</span> ss</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` <span class="keyword">AS</span> rr</span><br><span class="line"><span class="keyword">ON</span> ss.studentno <span class="operator">=</span> rr.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` <span class="keyword">As</span> sub</span><br><span class="line"><span class="keyword">on</span> rr.subjectno <span class="operator">=</span> sub.subjectno</span><br></pre></td></tr></table></figure><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 降序</span></span><br><span class="line"><span class="keyword">SELECT</span> ss.studentno,studentname,subjectname,studentresult </span><br><span class="line"><span class="keyword">FROM</span> `student` <span class="keyword">As</span> ss</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` <span class="keyword">AS</span> rr</span><br><span class="line"><span class="keyword">ON</span> ss.studentno <span class="operator">=</span> rr.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` <span class="keyword">As</span> sub</span><br><span class="line"><span class="keyword">on</span> rr.subjectno <span class="operator">=</span> sub.subjectno</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> studentresult <span class="keyword">DESC</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 升序</span></span><br><span class="line"><span class="keyword">SELECT</span> ss.studentno,studentname,subjectname,studentresult </span><br><span class="line"><span class="keyword">FROM</span> `student` <span class="keyword">As</span> ss</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` <span class="keyword">AS</span> rr</span><br><span class="line"><span class="keyword">ON</span> ss.studentno <span class="operator">=</span> rr.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` <span class="keyword">As</span> sub</span><br><span class="line"><span class="keyword">on</span> rr.subjectno <span class="operator">=</span> sub.subjectno</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> studentresult <span class="keyword">ASC</span></span><br></pre></td></tr></table></figure><h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><ul><li>缓解数据库压力</li><li>给人的体验更好</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ss.studentno,studentname,subjectname,studentresult </span><br><span class="line"><span class="keyword">FROM</span> `student` <span class="keyword">As</span> ss</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` <span class="keyword">AS</span> rr</span><br><span class="line"><span class="keyword">ON</span> ss.studentno <span class="operator">=</span> rr.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` <span class="keyword">As</span> sub</span><br><span class="line"><span class="keyword">on</span> rr.subjectno <span class="operator">=</span> sub.subjectno</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> studentresult <span class="keyword">ASC</span></span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">5</span>  <span class="comment">-- 第一页，每页显示五条数据</span></span><br><span class="line"></span><br><span class="line">(n<span class="number">-1</span>)<span class="operator">*</span><span class="number">5</span> <span class="number">5</span> <span class="comment">-- 第n页，，每页显示五条数据</span></span><br><span class="line"><span class="number">0</span>,<span class="number">5</span>   <span class="comment">-- 第一页</span></span><br><span class="line"><span class="number">5</span>,<span class="number">5</span>   <span class="comment">-- 第二页</span></span><br><span class="line"><span class="number">10</span>,<span class="number">5</span>  <span class="comment">-- 第三页</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,studentresult,subjectname,</span><br><span class="line"><span class="keyword">FROM</span> `student` <span class="keyword">AS</span>  s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` <span class="keyword">AS</span>  r</span><br><span class="line"><span class="keyword">ON</span> s.studentno <span class="operator">=</span> r.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` <span class="keyword">AS</span>  sub</span><br><span class="line"><span class="keyword">ON</span> sub.subjectno <span class="operator">=</span> r.subjectno</span><br><span class="line"><span class="keyword">WHERE</span> subjectname <span class="operator">=</span> <span class="string">&#x27;Java程序设计-1&#x27;</span> <span class="keyword">AND</span> studentresult <span class="operator">&gt;=</span> <span class="number">80</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> studentresult <span class="keyword">DESC</span> </span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">10</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;DQL&quot;&gt;&lt;a href=&quot;#DQL&quot; class=&quot;headerlink&quot; title=&quot;DQL&quot;&gt;&lt;/a&gt;DQL&lt;/h2&gt;&lt;p&gt;(Data Query Language)数据查询语言&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有的查询操作都用它 select&lt;/li&gt;
&lt;l</summary>
      
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="后端" scheme="http://example.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="mysql" scheme="http://example.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql数据管理</title>
    <link href="http://example.com/2023/03/06/mysql-mysql-05/"/>
    <id>http://example.com/2023/03/06/mysql-mysql-05/</id>
    <published>2023-03-06T07:48:10.000Z</published>
    <updated>2023-03-07T06:02:33.215Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-1-外键"><a href="#1-1-外键" class="headerlink" title="1.1 外键"></a>1.1 外键</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 学生表的gradeid字段要去引用年纪表的gradeid</span></span><br><span class="line"><span class="comment">-- 定义外键key</span></span><br><span class="line"><span class="comment">-- 给这个外键添加约束（执行引用） REFERENCES 引用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `students` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">  `gradeid` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年级&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  KEY `FK_grade` (`gradeid`),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `FK_grade` <span class="keyword">FOREIGN</span> KEY (`gradeid`) <span class="keyword">REFERENCES</span> `grade` (`gradeid`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb3</span><br></pre></td></tr></table></figure><p><img src="D:\work\blog\source_posts\mysql\mysql-05\image-20230306155623110.png" alt="image-20230306155623110"></p><blockquote><p>最佳实现</p></blockquote><ul><li>数据库就是单纯的表，只用来存数据，行（数据）和列（字段）</li><li>想使用多张表的数据，想使用外键，用<strong>程序</strong>实现</li></ul><h2 id="1-2-DML语言"><a href="#1-2-DML语言" class="headerlink" title="1.2 DML语言"></a>1.2 DML语言</h2><p><strong>数据库的意义</strong>：数据存储，数据管理</p><p>DML语言：数据操作语言</p><ul><li>insert </li><li>update</li><li>delete</li></ul><h2 id="1-3-添加-insert"><a href="#1-3-添加-insert" class="headerlink" title="1.3 添加 insert"></a>1.3 添加 insert</h2><p>格式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名(`字段名<span class="number">1</span>`,`字段名<span class="number">2</span>`,`字段名<span class="number">3</span>`,...)<span class="keyword">VALUES</span>(<span class="string">&#x27;值1&#x27;</span>,<span class="string">&#x27;值2&#x27;</span>,<span class="string">&#x27;值3&#x27;</span>,...)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 插入语句（添加）</span></span><br><span class="line"><span class="comment">-- INSERT INTO 表名(`字段名1`)VALUES(&#x27;值1&#x27;)</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `grade`(`gradename`) <span class="keyword">VALUES</span>(<span class="string">&#x27;大一&#x27;</span>)</span><br><span class="line"><span class="comment">-- 一般写插入语句，一定要数据和字段一一对应</span></span><br><span class="line"><span class="comment">-- 可以插入多个字段  同个字段 插入多条</span></span><br><span class="line"><span class="comment">-- INSERT INTO 表名(`字段名1`)VALUES(&#x27;值1&#x27;),(&#x27;值2&#x27;),(&#x27;值3&#x27;),...</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `grade`(`gradename`) <span class="keyword">VALUES</span>(<span class="string">&#x27;大二&#x27;</span>),(<span class="string">&#x27;大三&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `students`(`name`) <span class="keyword">VALUES</span>(<span class="string">&#x27;lelush&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- INSERT INTO 表名(`字段名1`,`字段名2`,`字段名3`,...)VALUES(&#x27;值1&#x27;,&#x27;值2&#x27;,&#x27;值3&#x27;,...)</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `students`(`name`,`pwd`,`sex`) <span class="keyword">VALUES</span>(<span class="string">&#x27;lelush&#x27;</span>,<span class="string">&#x27;123213&#x27;</span>,<span class="string">&#x27;女&#x27;</span>)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `students` <span class="keyword">VALUES</span>(<span class="string">&#x27;lelush&#x27;</span>,<span class="string">&#x27;123213&#x27;</span>,<span class="string">&#x27;女&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 这个缺少id，不可以一一对应</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `students` <span class="keyword">VALUES</span>(<span class="string">&#x27;lelush&#x27;</span>,<span class="string">&#x27;123213&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;2002-10-02&#x27;</span>,<span class="string">&#x27;广州&#x27;</span>,<span class="string">&#x27;1248d733@qq.com&#x27;</span>)</span><br><span class="line"><span class="comment">-- 这个可以：INSERT INTO 表名 VALUES(&#x27;字段名1的值&#x27;,&#x27;字段名2的值&#x27;,&#x27;字段名3的值&#x27;,...)</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `students` <span class="keyword">VALUES</span>(<span class="number">3</span>, <span class="string">&#x27;lelush&#x27;</span>,<span class="string">&#x27;123213&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;2002-10-02&#x27;</span>,<span class="string">&#x27;广州&#x27;</span>,<span class="string">&#x27;1248d733@qq.com&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>注意事项：</strong></p><ol><li><p>字段和字段之间使用英文逗号隔开</p></li><li><p>字段可以省略，但是后面的至必须要一一对应，包括自增的id，不能少</p></li><li><p>可以同时插入多条数据，格式为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名(`字段名<span class="number">1</span>,字段名<span class="number">2</span>`,...)<span class="keyword">VALUES</span>(<span class="string">&#x27;第一条数据的值1&#x27;</span>,<span class="string">&#x27;第一条数据的值2&#x27;</span>,...),(<span class="string">&#x27;第二条数据的值1&#x27;</span>,<span class="string">&#x27;第二条数据的值2&#x27;</span>,...)</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>练习</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `grade`(`gradename`) </span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;三年级&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;四年级&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;五年级&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;六年级&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;初一&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;初二&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;初三&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;高一&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;高二&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;高三&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `students`(`name`,`birth`,`address`,`email`)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;仗义&#x27;</span>,<span class="string">&#x27;2001-1-1&#x27;</span>,<span class="string">&#x27;汕尾&#x27;</span>,<span class="string">&#x27;172222&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;张二&#x27;</span>,<span class="string">&#x27;2003-02-03&#x27;</span>,<span class="string">&#x27;汕头&#x27;</span>,<span class="string">&#x27;155456&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2002-3-3&#x27;</span>,<span class="string">&#x27;潮州&#x27;</span>,<span class="string">&#x27;123124&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;张思&#x27;</span>,<span class="string">&#x27;2004-3-1&#x27;</span>,<span class="string">&#x27;揭阳&#x27;</span>,<span class="string">&#x27;2314414&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;账务&#x27;</span>,<span class="string">&#x27;2003-5-3&#x27;</span>,<span class="string">&#x27;惠州&#x27;</span>,<span class="string">&#x27;4214515&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="1-4-修改-update"><a href="#1-4-修改-update" class="headerlink" title="1.4 修改 update"></a>1.4 修改 update</h2><p>格式：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> `table_reference` <span class="keyword">SET</span> `col_name1`<span class="operator">=</span><span class="string">&#x27;expr1&#x27;</span>,`col_name2`<span class="operator">=</span><span class="string">&#x27;expr2&#x27;</span> <span class="keyword">WHERE</span> where_condition;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> `students` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;zxc&#x27;</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 不指定条件的情况下，会改动所有表</span></span><br><span class="line"><span class="keyword">UPDATE</span> `students` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;zxc&#x27;</span>;</span><br><span class="line"><span class="comment">-- 修改多个属性，用逗号隔开</span></span><br><span class="line"><span class="keyword">UPDATE</span> `students` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;zxc1&#x27;</span>,`email`<span class="operator">=</span><span class="string">&#x27;1234me@11.com&#x27;</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>条件：where 子句 运算符 操作符会返回布尔值</p><table><thead><tr><th>操作符</th><th>含义</th><th>例子</th><th>结果</th></tr></thead><tbody><tr><td>=</td><td>等于</td><td>5=6</td><td>false</td></tr><tr><td>&lt;&gt;或者 感叹号＋=</td><td>不等于</td><td>5&lt;&gt;6</td><td>true</td></tr><tr><td>BETWEEN A AND B</td><td>在A和B范围之间</td><td>BETWEEN 2 AND 6</td><td>[2,6]</td></tr><tr><td>AND</td><td>&amp;&amp; 和</td><td>5&gt;1 AND 5&lt;10</td><td>true</td></tr><tr><td>OR</td><td>|| 或者</td><td>5&gt;1 OR 1&gt;2</td><td>true</td></tr></tbody></table><p>注意：</p><ul><li><p>col_name 数据库的列，带上``</p></li><li><p>条件，筛选的条件，如果没有指定，会修改所有的列</p></li><li><p>value，是一个具体的值，也可以是一个变量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> `students` <span class="keyword">SET</span> `birth`<span class="operator">=</span><span class="built_in">CURRENT_DATE</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure></li></ul><h2 id="1-5-删除"><a href="#1-5-删除" class="headerlink" title="1.5 删除"></a>1.5 删除</h2><blockquote><p>delete</p></blockquote><p>格式：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `table_reference` <span class="keyword">WHERE</span> where_condition;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除数据 (避免这样写，会全部删除)</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `students`</span><br><span class="line"><span class="comment">-- 删除指定数据：之前的自增不会重置</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `students` <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><blockquote><p>TRUNCATE </p></blockquote><p>DELETE和TRUNCATE的区别：</p><ul><li>相同点：都能删除数据，都不会删除表结构</li><li>不同点<ul><li>TRUNCATE 重新设置 自增列 计时器会归零</li><li>TRUNCATE 不会影响事物</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 作用: 完全清空一个数据库表，表的结构和索引约束不会变!</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> `students` </span><br><span class="line"><span class="comment">-- 清空后 之前的自增也会重置</span></span><br></pre></td></tr></table></figure><ul><li>InnoDB 自增列表会从1开始（会存在内存中的，断电即失）</li><li>MyISAM 继续从上一个自增量开始（存在文件中的，不会丢失）</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-1-外键&quot;&gt;&lt;a href=&quot;#1-1-外键&quot; class=&quot;headerlink&quot; title=&quot;1.1 外键&quot;&gt;&lt;/a&gt;1.1 外键&lt;/h2&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte</summary>
      
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="后端" scheme="http://example.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="mysql" scheme="http://example.com/tags/mysql/"/>
    
    <category term="DML语言" scheme="http://example.com/tags/DML%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>mysql：数据</title>
    <link href="http://example.com/2023/03/06/mysql-mysql-04/"/>
    <id>http://example.com/2023/03/06/mysql-mysql-04/</id>
    <published>2023-03-06T03:52:33.000Z</published>
    <updated>2023-03-06T06:20:54.733Z</updated>
    
    <content type="html"><![CDATA[<h2 id="列的数据类型"><a href="#列的数据类型" class="headerlink" title="列的数据类型"></a>列的数据类型</h2><blockquote><p>数值</p></blockquote><ul><li>tinyint          非常小的正整数      1个字节</li><li>smallint       小的整数                  2个字节</li><li>mediumint  中等大小的整数      3个字节</li><li><strong>int                 标准整数                  4个字节</strong></li><li>bigint            大的整数                 8个字节</li><li>float              单精度浮点数          4个字节</li><li>double         双精度浮点数          8个字节</li><li>decimal       用于一些经济计算</li></ul><blockquote><p>字符</p></blockquote><ul><li>char     </li><li><strong>varchar</strong> </li><li>tinyblob</li><li>tinytext</li><li>blob</li><li>text</li></ul><blockquote><p>日期</p></blockquote><ul><li>date</li><li>time</li><li>datetime</li><li>timestamp 时间戳</li></ul><blockquote><p>null</p></blockquote><h2 id="数据库字段属性"><a href="#数据库字段属性" class="headerlink" title="数据库字段属性"></a>数据库字段属性</h2><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><p>每一个表都要有以下五个字段</p><ul><li>id                   主键</li><li>version         乐观锁</li><li>is_delete       未删除</li><li>gmt_create   创建时间</li><li>gmt_update  修改时间</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;列的数据类型&quot;&gt;&lt;a href=&quot;#列的数据类型&quot; class=&quot;headerlink&quot; title=&quot;列的数据类型&quot;&gt;&lt;/a&gt;列的数据类型&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;数值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;tinyint    </summary>
      
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="后端" scheme="http://example.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="mysql" scheme="http://example.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>操作数据库</title>
    <link href="http://example.com/2023/03/03/mysql-mysql-03/"/>
    <id>http://example.com/2023/03/03/mysql-mysql-03/</id>
    <published>2023-03-03T07:47:58.000Z</published>
    <updated>2023-03-06T07:48:03.134Z</updated>
    
    <content type="html"><![CDATA[<p>操作数据库 &gt; 操作数据中的表 &gt; 操作数据库中表的数据</p><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> study;</span><br><span class="line"><span class="comment">--或者</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE study;</span><br></pre></td></tr></table></figure><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE IF <span class="keyword">EXISTS</span> teachers;</span><br><span class="line"><span class="comment">--或者</span></span><br><span class="line"><span class="keyword">DROP</span> DATABASE teachers;</span><br></pre></td></tr></table></figure><h3 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h3><p>如果表名或者字段名是一个特殊字符，就要带``</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USE study;</span><br><span class="line">USE `study`;</span><br></pre></td></tr></table></figure><h3 id="查看所有数据库"><a href="#查看所有数据库" class="headerlink" title="查看所有数据库"></a>查看所有数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> DATABASES;</span><br></pre></td></tr></table></figure><h3 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a>创建数据库表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建一个school数据库</span></span><br><span class="line"><span class="comment">-- 创建学生表（列，字段），使用SQL创建</span></span><br><span class="line"><span class="comment">-- 学号int 密码varchar(20) 姓名，性别varchar(2)，出生日期（datetime），家庭住址，email</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注意点：使用英文符号，表的名字和字段尽量用``</span></span><br><span class="line"><span class="comment">-- 字符串用单引号</span></span><br><span class="line"><span class="comment">-- 所有的语句后面加上英文的,  最后一个不用</span></span><br><span class="line"><span class="comment">-- PRIMARY KEY 主键</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `students`(</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birth` <span class="type">DATE</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">`address` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">`email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY(`id`)</span><br><span class="line"></span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><p>常用命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> DATABASE school <span class="comment">-- 查看创建数据库的语句</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> students <span class="comment">-- 查看students表的定义语句</span></span><br><span class="line"><span class="keyword">DESC</span> students   <span class="comment">-- 显示表的结构</span></span><br></pre></td></tr></table></figure><h4 id="数据库引擎"><a href="#数据库引擎" class="headerlink" title="数据库引擎"></a>数据库引擎</h4><blockquote><p>INNODB</p></blockquote><p>navicat：设计表&gt;&gt;选项&gt;&gt;引擎</p><p>INNODB：mysql默认使用的，</p><p>MYISAM：早些年使用的，</p><table><thead><tr><th></th><th>MYISAM</th><th>INNODB</th></tr></thead><tbody><tr><td>事务支持</td><td>不支持</td><td>支持</td></tr><tr><td>数据行锁定</td><td>不支持</td><td>支持</td></tr><tr><td>外键外束</td><td>不支持</td><td>支持</td></tr><tr><td>全文索引</td><td>不支持</td><td>支持</td></tr><tr><td>表空间的大小</td><td>较小</td><td>较大，约为2倍</td></tr></tbody></table><p>常规使用操作：</p><ul><li>MYISAM，节约空间，速度较快</li><li>INNODB，安全性高，事物的处理，多表多用户操作</li></ul><p><img src="D:\work\blog\source_posts\mysql\mysql-03\image-20230306145204445.png" alt="image-20230306145204445"></p><h4 id="字符集编码"><a href="#字符集编码" class="headerlink" title="字符集编码"></a>字符集编码</h4><blockquote><p><strong>utf8mb3和utf8mb4</strong></p></blockquote><p>在mysql中，utf8默认指的是utf8mb3，即使用1-3个字节表示一个字符；正常来说utf8也就是最大使用3个字节的utf8mb3已经够用了，但是为了存储4个字节场景下的字符如emoji表情，就需要用到4个字节编码的utf8，也就是utf8mb4。其中mb4的含义为：most bytes 4，也就是最大4字节。</p><h3 id="修改删除表"><a href="#修改删除表" class="headerlink" title="修改删除表"></a>修改删除表</h3><blockquote><p>修改</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改表名：ALTER TABLE 旧表名 RENAME AS 新表名;</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teachers RENAME <span class="keyword">AS</span> teachers1;</span><br><span class="line"><span class="comment">-- 增加表的字段：ALTER TABLE 表名 ADD 字段名 列属性;</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teachers1 <span class="keyword">ADD</span> age <span class="type">INT</span> ( <span class="number">3</span> );</span><br><span class="line"><span class="comment">-- 修改表的字段 （重命名，修改约束）</span></span><br><span class="line"><span class="comment">-- 修改约束：ALTER TABLE 表名 MODIFY 字段名 列属性[]; </span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teachers1 MODIFY age <span class="type">VARCHAR</span>(<span class="number">3</span>); <span class="comment">-- 修改约束，无法重命名</span></span><br><span class="line"><span class="comment">-- 重命名，：ALTER TABLE 表名 CHANGE 旧字段名 新字段名 列属性[]; </span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teachers1 CHANGE age age1 <span class="type">int</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p><strong>注意：CHANGE 不加类型会报错</strong></p><p><img src="D:\work\blog\source_posts\mysql\mysql-03\98da6282e0919b941d00ed319901f9a.png" alt="98da6282e0919b941d00ed319901f9a"></p><p><img src="D:\work\blog\source_posts\mysql\mysql-03\c83dd064d3d223623a4b80caf5feac3.png" alt="c83dd064d3d223623a4b80caf5feac3"></p><blockquote><p>删除</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表的字段：ALTER TABLE 表名 DROP 字段名;</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teachers1 <span class="keyword">DROP</span> age1;</span><br><span class="line"><span class="comment">-- 删除表：如果表存在就删除：DROP TABLE IF EXISTS 表名;</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> teachers1;</span><br></pre></td></tr></table></figure><p><strong>所有的创建的删除尽量加上判断，以免报错</strong></p><blockquote><p>注意点</p></blockquote><ul><li>`` 字段名用反单引号包裹</li><li>注释  <hr><ul><li>/**/</li></ul></li><li>sql关键字对大小写不敏感，建议大家写小写，方便看。</li><li>所有的符号都是英文符号</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;操作数据库 &amp;gt; 操作数据中的表 &amp;gt; 操作数据库中表的数据&lt;/p&gt;
&lt;h3 id=&quot;创建数据库&quot;&gt;&lt;a href=&quot;#创建数据库&quot; class=&quot;headerlink&quot; title=&quot;创建数据库&quot;&gt;&lt;/a&gt;创建数据库&lt;/h3&gt;&lt;figure class=&quot;high</summary>
      
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="后端" scheme="http://example.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="mysql" scheme="http://example.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql的一些命令</title>
    <link href="http://example.com/2023/03/03/mysql-mysql-02/"/>
    <id>http://example.com/2023/03/03/mysql-mysql-02/</id>
    <published>2023-03-03T07:08:15.000Z</published>
    <updated>2023-03-03T07:47:40.829Z</updated>
    
    <content type="html"><![CDATA[<h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>命令行连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p12345  -- 连接数据库</span><br><span class="line"></span><br><span class="line">update mysql.user <span class="built_in">set</span> authentication_string=password(<span class="string">&#x27;123456&#x27;</span>) <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span></span><br><span class="line">and Host</span><br><span class="line"><span class="string">&#x27;localhost&#x27;</span>;  -- 修改用户密码</span><br><span class="line"></span><br><span class="line">flush privileges; -- 刷新权限</span><br></pre></td></tr></table></figure><p>mysql -u”用户名” -p”密码”</p><p><strong>所有的语句都要使用”;“结尾</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW DATABASES; -- 查看所有的数据库</span><br></pre></td></tr></table></figure><p><img src="D:\work\blog\source_posts\mysql\mysql-02\image-20230303152718449.png" alt="image-20230303152718449"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use study; -- 使用study这个数据库</span><br></pre></td></tr></table></figure><p><img src="D:\work\blog\source_posts\mysql\mysql-02\image-20230303152937041.png" alt="image-20230303152937041"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW TABLES; --查看数据库中所有的表</span><br></pre></td></tr></table></figure><p><img src="D:\work\blog\source_posts\mysql\mysql-02\image-20230303153604213.png" alt="image-20230303153604213"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESCRIBE students; --显示数据库中students这个表的所有数据</span><br></pre></td></tr></table></figure><p><img src="D:\work\blog\source_posts\mysql\mysql-02\image-20230303153654303.png" alt="image-20230303153654303"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE teachers; --创建一个新的数据库</span><br></pre></td></tr></table></figure><p><img src="D:\work\blog\source_posts\mysql\mysql-02\image-20230303154037322.png" alt="image-20230303154037322"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">exit; --退出连接</span><br><span class="line">-- 单行注释</span><br><span class="line">/*</span><br><span class="line">多行注释*/</span><br></pre></td></tr></table></figure><p><img src="D:\work\blog\source_posts\mysql\mysql-02\image-20230303154536986.png" alt="image-20230303154536986"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;连接数据库&quot;&gt;&lt;a href=&quot;#连接数据库&quot; class=&quot;headerlink&quot; title=&quot;连接数据库&quot;&gt;&lt;/a&gt;连接数据库&lt;/h3&gt;&lt;p&gt;命令行连接&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="后端" scheme="http://example.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="mysql" scheme="http://example.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>ElementUI的Table组件在无数据情况下让“暂无数据”文本居中显示</title>
    <link href="http://example.com/2023/02/23/element-element-05/"/>
    <id>http://example.com/2023/02/23/element-element-05/</id>
    <published>2023-02-23T02:56:15.000Z</published>
    <updated>2023-03-03T07:00:28.541Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>当显示多列字段时，底部会出现滚动条。“暂无数据”文本根据列平铺的总宽度进行居中，导致无数据时“暂无数据”文本向右偏移。</p><p><img src="20210222142425906.jpg"></p><h3 id="修改样式"><a href="#修改样式" class="headerlink" title="修改样式"></a>修改样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">::v-deep .el-table__empty-block &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">min-width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">padding-right</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;p&gt;当显示多列字段时，底部会出现滚动条。“暂无数据”文本根据列平铺的总宽度进行居中，导致无数据时“暂无数据”文本向右偏移。&lt;/p&gt;
&lt;p&gt;&lt;im</summary>
      
    
    
    
    <category term="Vue" scheme="http://example.com/categories/Vue/"/>
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
    <category term="element-ui" scheme="http://example.com/tags/element-ui/"/>
    
    <category term="el-table" scheme="http://example.com/tags/el-table/"/>
    
  </entry>
  
  <entry>
    <title>Typora-使用技巧</title>
    <link href="http://example.com/2023/02/13/%E5%85%B6%E4%BB%96-Typora-Typora-01/"/>
    <id>http://example.com/2023/02/13/%E5%85%B6%E4%BB%96-Typora-Typora-01/</id>
    <published>2023-02-13T07:18:55.000Z</published>
    <updated>2023-03-03T07:03:01.252Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一级======从大变小======&gt;六级</span><br><span class="line">格式：# + &quot;空格&quot; + 标题 （几个#代表几级标题）</span><br><span class="line">快捷键：Ctrl+数字</span><br></pre></td></tr></table></figure><p><img src="image-20230213153936827.png"></p><h2 id="2-文字"><a href="#2-文字" class="headerlink" title="2.文字"></a>2.文字</h2><h3 id="2-1-加粗"><a href="#2-1-加粗" class="headerlink" title="2.1 加粗"></a>2.1 加粗</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法：**文字** 或者 __文字__</span><br><span class="line">快捷键：Ctrl+b</span><br></pre></td></tr></table></figure><p><img src="image-20230303150213952.png"></p><h3 id="2-2-斜体"><a href="#2-2-斜体" class="headerlink" title="2.2 斜体"></a>2.2 斜体</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法：*文字* 或者 _文字_</span><br><span class="line">快捷键：Ctrl+i</span><br></pre></td></tr></table></figure><p><img src="image-20230303150227826.png"></p><h3 id="2-3-斜体-加粗"><a href="#2-3-斜体-加粗" class="headerlink" title="2.3 斜体 + 加粗"></a>2.3 斜体 + 加粗</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">语法：***文字*** 或者 ___文字___</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-标题&quot;&gt;&lt;a href=&quot;#1-标题&quot; class=&quot;headerlink&quot; title=&quot;1.标题&quot;&gt;&lt;/a&gt;1.标题&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="Typora" scheme="http://example.com/categories/Typora/"/>
    
    
    <category term="Typora" scheme="http://example.com/tags/Typora/"/>
    
  </entry>
  
  <entry>
    <title>Java-内存分析</title>
    <link href="http://example.com/2023/02/13/Java-%E6%95%B0%E7%BB%84-Java-02/"/>
    <id>http://example.com/2023/02/13/Java-%E6%95%B0%E7%BB%84-Java-02/</id>
    <published>2023-02-13T07:12:03.000Z</published>
    <updated>2023-02-15T05:48:38.380Z</updated>
    
    <content type="html"><![CDATA[<h2 id="内存分析"><a href="#内存分析" class="headerlink" title="内存分析"></a>内存分析</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A1[Java内存]--&gt;A2[堆]</span><br><span class="line">A2--&gt;存放new的对象的数组</span><br><span class="line">A2--&gt;可以被所有的线程共享--&gt;不会存放别的对象引用</span><br><span class="line">A1--&gt;A3[栈]</span><br><span class="line">A3--&gt;存放基本变量类型--&gt;会包含这个基本类型的具体数值</span><br><span class="line">A3--&gt;引用对象的变量--&gt;会存放这个引用在堆里面的具体地址</span><br><span class="line">A1--&gt;A4[方法区]</span><br><span class="line">A4--&gt;也可以被所有的线程共享</span><br><span class="line">A4--&gt;包含了所有类和static变量</span><br></pre></td></tr></table></figure><h3 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.lang.ArraylndexOutOfBoundsException   //数组下标越界</span><br></pre></td></tr></table></figure><p><img src="image-20230215134721881.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;内存分析&quot;&gt;&lt;a href=&quot;#内存分析&quot; class=&quot;headerlink&quot; title=&quot;内存分析&quot;&gt;&lt;/a&gt;内存分析&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java-数组</title>
    <link href="http://example.com/2023/02/10/Java-%E6%95%B0%E7%BB%84-Java-01/"/>
    <id>http://example.com/2023/02/10/Java-%E6%95%B0%E7%BB%84-Java-01/</id>
    <published>2023-02-10T06:44:37.000Z</published>
    <updated>2023-03-03T07:03:40.129Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数组的定义"><a href="#数组的定义" class="headerlink" title="数组的定义"></a>数组的定义</h2><ul><li>数组是相同类型数据的有序集合。</li><li>数组描述的是相同类型的若千个数据,按照一定的先后次序排列组合而成。</li><li>其中，每一个数据称作一个数组元素每个数组元素可以通过一个下标来访问它们。</li></ul><h2 id="数组声明创建"><a href="#数组声明创建" class="headerlink" title="数组声明创建"></a>数组声明创建</h2><p>首先必须声明数组变量，才能在程序中使用数组。下面是声明数组变量的语法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataType[] arrayRefVar; <span class="comment">//首选的方法</span></span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">dataType arrayRefVar[]; <span class="comment">//效果相同，但不是首选</span></span><br></pre></td></tr></table></figure><p>Java语言使用new操作符来创建数组，语法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataType[] arrayRefVar = <span class="keyword">new</span> <span class="title class_">dataType</span>[arraySize]</span><br></pre></td></tr></table></figure><p>数组的元素是通过索引访问的，数组索引从0开始。</p><p>获取数组的长度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arrays.length</span><br></pre></td></tr></table></figure><h2 id="数组的三种初始化"><a href="#数组的三种初始化" class="headerlink" title="数组的三种初始化"></a>数组的三种初始化</h2><ul><li><p>静态初始化：创建+赋值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">Man[] mans = &#123;<span class="keyword">new</span> <span class="title class_">Man</span>(<span class="number">1</span>,<span class="number">1</span>),<span class="keyword">new</span> <span class="title class_">Man</span>(<span class="number">2</span>,<span class="number">2</span>)&#125;;</span><br></pre></td></tr></table></figure></li><li><p>动态初始化：包含默认初始化（int类型默认null，字符串类型默认null）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] b = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">b[<span class="number">0</span>] = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></li><li><p>数组的默认初始化</p><p>数组是引用类型，它的元素相当于类的实例变量，因此数组一经分配空间，其中的每个元素也被按照实例变量同样的方式被隐式初始化。</p></li></ul><h3 id="数组的四个基本特点"><a href="#数组的四个基本特点" class="headerlink" title="数组的四个基本特点"></a>数组的四个基本特点</h3><ol><li>其长度是确定的。数组一旦被创建，它的大小就是不可以改变的。</li><li>其元素必须是相同类型,不允许出现混合类型。</li><li>数组中的元素可以是任何数据类型，包括基本类型和引用类型。</li><li>数组变量属引用类型，数组也可以看成是对象，数组中的每个元素相当于该对象的成员变量。数组本身就是对象，Java中对象是在堆中的，因此数组无论保存原始类型还是其他对象类型，<strong>数组对象本身是在堆中的</strong>。</li></ol><h2 id="数组边界"><a href="#数组边界" class="headerlink" title="数组边界"></a>数组边界</h2><p>下标的合法区间为[0，length-1]，如果越界就会报错。</p><p>报错：java.lang.ArrayIndexOutOfBoundsException（数组下标越界）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">    System.out.println(a[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="image-20230215140643410.png"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>数组是相同数据类型(数据类型可以为任意类型)的有序集合</li><li>数组也是对象。数组元素相当于对象的成员变量。</li><li>数组长度的确定的，不可变的。如果越界，则报:ArraylndexOutofBounds</li></ul><h2 id="数组使用"><a href="#数组使用" class="headerlink" title="数组使用"></a>数组使用</h2><h3 id="for-each循环"><a href="#for-each循环" class="headerlink" title="for-each循环"></a>for-each循环</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;数组的定义&quot;&gt;&lt;a href=&quot;#数组的定义&quot; class=&quot;headerlink&quot; title=&quot;数组的定义&quot;&gt;&lt;/a&gt;数组的定义&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;数组是相同类型数据的有序集合。&lt;/li&gt;
&lt;li&gt;数组描述的是相同类型的若千个数据,按照一定的先后次序排</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java-方法</title>
    <link href="http://example.com/2023/02/10/Java-%E6%96%B9%E6%B3%95-Java-01/"/>
    <id>http://example.com/2023/02/10/Java-%E6%96%B9%E6%B3%95-Java-01/</id>
    <published>2023-02-10T02:57:01.000Z</published>
    <updated>2023-02-10T06:43:58.705Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是方法"><a href="#什么是方法" class="headerlink" title="什么是方法"></a>什么是方法</h2><h3 id="Java方法是语句的集合，它们在一起执行一个功能。"><a href="#Java方法是语句的集合，它们在一起执行一个功能。" class="headerlink" title="Java方法是语句的集合，它们在一起执行一个功能。"></a>Java方法是语句的集合，它们在一起执行一个功能。</h3><ol><li>方法是解决一类问题的步骤的有序组合</li><li>方法包含于类或对象中</li><li>方法在程序中被创建，在其他地方被引用</li></ol><h3 id="设计方法的原则"><a href="#设计方法的原则" class="headerlink" title="设计方法的原则"></a>设计方法的原则</h3><p>方法的本意是功能块，就是实现某个功能的语句块的集合。我们设计方法的时候，最好保持方法的原子性，就是一个方法只完成1个功能，这样利于我们后期的扩展。</p><h3 id="方法的命名规则"><a href="#方法的命名规则" class="headerlink" title="方法的命名规则"></a>方法的命名规则</h3><p>驼峰命名规则，首字母小写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="comment">//main方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(sum); <span class="comment">// 3</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法的定义"><a href="#方法的定义" class="headerlink" title="方法的定义"></a>方法的定义</h2><p>Java的方法类似于其它语言的函数，是一段<strong>用来完成特定功能的代码片段</strong>，一般情况下，定义个方法包含以下语法:</p><p><strong>方法包含一个方法头和一个方法体</strong>，下面是一个方法的所有部分：</p><ul><li><strong>修饰符</strong>：修饰符，这是可选的，告诉编译器如何调用该方法。定义了该方法的访问类型。</li><li><strong>返回值类型</strong>：方法可能会返回值。returnValueType 是方法返回值的数据类型。有些方法执行所需的操作，但没有返回值。在这种情况下，returnValueType 是关键字void。</li><li><strong>方法名</strong>：是方法的实际名称。方法名和参数表共同构成方法签名。</li><li><strong>参数类型</strong>：参数是一个占位符。当方法被调用的时候，传递给参数。这个值被称为实参或变量。参数列表是指方法的参数类型、顺序和参数的个数。参数是可选的，方法可以不包含任何参数。<ul><li><strong>形式参数</strong>：在方法被调用时用于接收外界输入的数据</li><li><strong>实参</strong>：调用方法时实际传给方法的数据</li></ul></li><li><strong>方法体</strong>：方法体包含具体的语句，定义该方法的功能。</li></ul><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">修饰符 返回值类型 方法名(参数类型 参数名)&#123;</span><br><span class="line">...</span><br><span class="line">方法体</span><br><span class="line">...</span><br><span class="line">return 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="comment">//main方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//这里传过去的实际参数1和2，就是实参</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(sum); <span class="comment">// 3</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//加法</span></span><br><span class="line">    <span class="comment">//形式参数：用来定义的（a和b）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a+b; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> max(<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line">        System.out.println(num);<span class="comment">//4</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> max(<span class="number">5</span>,<span class="number">3</span>);</span><br><span class="line">        System.out.println(num1);<span class="comment">//5</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//比大小</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> a ,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="type">int</span> res;</span><br><span class="line">        <span class="keyword">if</span>(a&lt;b)&#123;</span><br><span class="line">            res = b;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res = a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法的调用"><a href="#方法的调用" class="headerlink" title="方法的调用"></a>方法的调用</h2><p>调用方法：对象.方法名(实参列表)</p><p>Java支持两种调用方法的方式，根据方法是否返回值来选择</p><ul><li>当方法返回一个值的时候，方法调用通常被当做一个值</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">larger</span> <span class="operator">=</span> max(<span class="number">2</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure><ul><li>当方法返回值是void，方法调用是一条语句</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println();</span><br></pre></td></tr></table></figure><h2 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h2><p>重载就是在一个类中，有相同的函数名称，但形参不同的函数。</p><h3 id="方法的重载的规则"><a href="#方法的重载的规则" class="headerlink" title="方法的重载的规则"></a>方法的重载的规则</h3><ol><li>方法名称必须相同</li><li>参数列表必须不同(个数不同、或类型不同、参数排列顺序不同等)</li><li>方法的返回类型可以相同也可以不相同</li><li>仅仅返回类型不同不足以成为方法的重载</li></ol><h3 id="实现理论"><a href="#实现理论" class="headerlink" title="实现理论"></a>实现理论</h3><p>​        方法名称相同时，编译器会根据调用方法的参数个数、参数类型等去逐个匹配，以选择对应的方法，如果匹配失败，则编译器报错。</p><h2 id="命令行传参"><a href="#命令行传参" class="headerlink" title="命令行传参"></a>命令行传参</h2><p>有时候希望运行一个程序的时候再传递给它消息，这要靠命令行参数给main()函数实现。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;args[&quot;</span>+i+<span class="string">&quot;]:&quot;</span>+args[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="可变参数（不定项参数）"><a href="#可变参数（不定项参数）" class="headerlink" title="可变参数（不定项参数）"></a>可变参数（不定项参数）</h2><ul><li>JDK1.5开始，Java支持传递同类型的可变参数给一个方法</li><li>在方法声明中，在指定参数类型后加一个省略号（…）</li><li>一个方法中只能指定一个可变参数，它必须是方法的最后一个参数。任何普通的参数必须在它之前声明。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Demo04</span> <span class="variable">demo04</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo04</span>();</span><br><span class="line">        demo04.test(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">44</span>);</span><br><span class="line">        demo04.printMax(<span class="number">34</span>,<span class="number">13</span>,<span class="number">31</span>,<span class="number">43</span>,<span class="number">55</span>,<span class="number">66</span>,<span class="number">77</span>,<span class="number">33</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span> ...numbers)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; numbers.length; i++) &#123;</span><br><span class="line">            System.out.print(numbers[i]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printMax</span><span class="params">(<span class="type">int</span>...num)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> num[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//没有传入数据</span></span><br><span class="line">        <span class="keyword">if</span>(num.length==<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;未传入数据&quot;</span>);</span><br><span class="line">            <span class="comment">//停止后续操作</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; num.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (num[i] &gt;= res)&#123;</span><br><span class="line">                res = num[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;最大的值是：&quot;</span>+res);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="image-20230210142138318.png"></p><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><p>通常，A方法调用B方法</p><p>递归：A方法调用A方法，就是自己调用自己。</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">利用递归可以用简单的程序来解决一些复杂的问题。它通常把一个大型复杂的问题层层转化为个与原问题相似的规模较小的问题来求解，递归策略只需少量的程序就可描述出解题过程所需要的多次重复计算，大大地减少了程序的代码量。递归的能力在于用有限的语句来定义对象的无限集合</span><br></pre></td></tr></table></figure></blockquote><p>递归结构包括两个部分：</p><ol><li>递归头：什么时候不调用自身方法。如果没有头，将陷入死循环。</li><li>递归体：什么时候需要调用自身方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(f(<span class="number">4</span>)); <span class="comment">//24</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> n*f(n-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是方法&quot;&gt;&lt;a href=&quot;#什么是方法&quot; class=&quot;headerlink&quot; title=&quot;什么是方法&quot;&gt;&lt;/a&gt;什么是方法&lt;/h2&gt;&lt;h3 id=&quot;Java方法是语句的集合，它们在一起执行一个功能。&quot;&gt;&lt;a href=&quot;#Java方法是语句的集合，它们在</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="递归" scheme="http://example.com/tags/%E9%80%92%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>Java-循环结构</title>
    <link href="http://example.com/2023/02/10/Java-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6-Java-02/"/>
    <id>http://example.com/2023/02/10/Java-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6-Java-02/</id>
    <published>2023-02-10T02:05:02.000Z</published>
    <updated>2023-02-10T02:56:21.289Z</updated>
    
    <content type="html"><![CDATA[<h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while()&#123;</span><br><span class="line">     //循环的内容</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li>只要布尔表达式为true，循环就会一直执行下去</li><li><strong>大多时候是会让循环停止下来的，需要一个让表达式失败的方式来结束循环</strong></li><li>少部分情况需要一直循环下去，比如服务器的请求响应监听等</li><li>循环条件一直为true就会造成无限循环（死循环），正常业务编程中应该尽量避免死循环，会影响程序性能或造成程序卡死崩溃。</li></ol><h2 id="do…while循环"><a href="#do…while循环" class="headerlink" title="do…while循环"></a>do…while循环</h2><h3 id="结构-1"><a href="#结构-1" class="headerlink" title="结构"></a>结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">do&#123;</span><br><span class="line">   //循环代码语句</span><br><span class="line">&#125;while(布尔表达式)</span><br></pre></td></tr></table></figure><h3 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h3><ol><li>对于while语句而言，如果不满足条件，则不能进入循环，但有时需要即使不满足条件，也至少执行一次。</li><li>do…while循环和while循环相似，不同的是，do…while循环至少会执行一次。</li></ol><h3 id="while和do…while之间的区别"><a href="#while和do…while之间的区别" class="headerlink" title="while和do…while之间的区别"></a>while和do…while之间的区别</h3><p>⭐while先判断后执行，do…while先执行后判断</p><p>⭐do…while总是保证循环体会被至少执行一次！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo06</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;while循环&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>(i&lt;=<span class="number">100</span>)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">System.out.println(<span class="string">&quot;do...while循环&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            System.out.println(n);</span><br><span class="line">            n++;</span><br><span class="line">        &#125;<span class="keyword">while</span> (n&lt;=<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><ul><li>for循环可以让循环结构变得更简单</li><li>for循环语句是支持迭代的一种通用结构，是最有效，最灵活的循环结构</li><li>for循环在执行的次数是在执行前就确定的。</li></ul><h3 id="结构-2"><a href="#结构-2" class="headerlink" title="结构"></a>结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for(初始化;布尔表达式;更新)&#123;</span><br><span class="line">     //代码语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ol><li>最先执行初始化语句，可以声明一种类型，但可以初始化一个多个循环控制变量，也可以是空语句</li><li>检测布尔表达式的结果，如果为true，循环体被执行，如果为false，循环终止，开始执行循环体后面的语句</li><li>执行一次循环后，更新循环控制变量，迭代因子控制循环变量的增减</li><li>再次检测布尔表达式，循环执行上面的过程</li></ol><h3 id="死循环"><a href="#死循环" class="headerlink" title="死循环"></a>死循环</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>( ; ; )&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo07</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//初始化a的值</span></span><br><span class="line">        <span class="keyword">while</span> (a&lt;=<span class="number">100</span>)&#123; <span class="comment">//条件判断</span></span><br><span class="line">            System.out.println(a); <span class="comment">//循环体</span></span><br><span class="line">            a = a + <span class="number">5</span>; <span class="comment">//迭代</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;while循环结束&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ; i &lt;= <span class="number">100</span> ; i = i + <span class="number">10</span>)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//死循环</span></span><br><span class="line">        <span class="comment">//for ( ; ; ) &#123;</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="练习：输出九九乘法表"><a href="#练习：输出九九乘法表" class="headerlink" title="练习：输出九九乘法表"></a>练习：输出九九乘法表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public class Demo08 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //输出九九乘法表</span><br><span class="line">        for (int j = 0; j &lt;= 9; j++) &#123;</span><br><span class="line">            for (int i = 0; i &lt;= j; i++) &#123;</span><br><span class="line">                System.out.print(j+&quot;*&quot;+i+&quot;=&quot;+(j*i)+&quot;\t&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="image-20230210103845511.png"></p><h2 id="增强for循环"><a href="#增强for循环" class="headerlink" title="增强for循环"></a>增强for循环</h2><ul><li>数组中重点使用</li><li>Java5引入了一种主要用于数组或集合的增强型</li></ul><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for(声明语句：表达式)&#123;</span><br><span class="line">//代码句子</span><br><span class="line">&#125;</span><br><span class="line">//声明语句：声明新的局部变量，该变量的类型必须和数组元素的类型匹配。其作用域限定在循环语句块，其值与此时数组元素的值相等。</span><br><span class="line">//表达式：表达式是要访问的数组名，或者是返回值为数组的方法</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo09</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] numbers = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;for循环&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">            System.out.println(numbers[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;增强for循环&quot;</span>);</span><br><span class="line">        <span class="comment">//遍历数组的元素</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x:numbers)&#123;</span><br><span class="line">            System.out.println(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="break-和-continue"><a href="#break-和-continue" class="headerlink" title="break 和 continue"></a>break 和 continue</h2><ul><li><strong>break</strong> 在任何循环语句的主体部分，均可用break控制循环的流程。break用于<strong>强行退出循环</strong>，不执行循环中剩余的语句。(break语句也在switch语句中使用)</li><li><strong>continue</strong> 语句用在循环语句体中，用于终止某次循环过程，即<strong>跳过循环体中尚未执行的语句接着进行下一次是否执行循环的判定</strong>。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo10</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;break-demo&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span> ; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i==<span class="number">3</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">//到3的时候就停止循环，只输出了 0 1 2</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;continue-dmeo&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">6</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (j==<span class="number">8</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>; <span class="comment">// 到8的时候就跳到下一次循环，输出了 6 7 9</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(j);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="image-20230210104929936.png"></p><h3 id="练习：打印三角形"><a href="#练习：打印三角形" class="headerlink" title="练习：打印三角形"></a>练习：打印三角形</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo11</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 打印三角形</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">5</span>; j &gt; i  ; j--) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;=  i; j++)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;  i; j++)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span> ; m &lt;= <span class="number">5</span>; m++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">5</span>; j &gt; m  ; j--) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">0</span> ; n &lt; (<span class="number">2</span>*m-<span class="number">1</span>) ; n++)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;#&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="image-20230210104858427.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;while循环&quot;&gt;&lt;a href=&quot;#while循环&quot; class=&quot;headerlink&quot; title=&quot;while循环&quot;&gt;&lt;/a&gt;while循环&lt;/h2&gt;&lt;h3 id=&quot;结构&quot;&gt;&lt;a href=&quot;#结构&quot; class=&quot;headerlink&quot; title=&quot;结</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java-顺序结构和选择结构</title>
    <link href="http://example.com/2023/02/10/Java-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6-Java-01/"/>
    <id>http://example.com/2023/02/10/Java-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6-Java-01/</id>
    <published>2023-02-10T01:42:32.000Z</published>
    <updated>2023-02-10T03:29:49.384Z</updated>
    
    <content type="html"><![CDATA[<h2 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h2><ul><li>Java的基本结构就是顺序结构，除非特别指明，否则就按照顺序一句一句执行。</li><li>顺序结构是最简单的算法结构</li><li>语句与语句之间，框与框之间是按从上往下的顺序执行的，它是由若干个依次执行的处理步骤组成的，<strong>它是任何一个算法都离不开的一种基本算法结构</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello1&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;hello2&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;hello3&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h2><ol><li>if单选择结构</li><li>if双选择结构</li><li>if多选择结构</li><li>嵌套的if结构</li><li>switch多选择结构</li></ol><h3 id="if单选择结构"><a href="#if单选择结构" class="headerlink" title="if单选择结构"></a>if单选择结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(布尔表达式)&#123; </span><br><span class="line">//如果布尔表达式结果为true将执行的语句  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=============if单选择结构============&quot;</span>);</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入内容：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        <span class="keyword">if</span>(str.equals(<span class="string">&quot;hello&quot;</span>))&#123;</span><br><span class="line">            System.out.println(str);  <span class="comment">//如果输入的是hello，会执行这句输出str</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;end&quot;</span>);</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="if双选择结构"><a href="#if双选择结构" class="headerlink" title="if双选择结构"></a>if双选择结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(布尔表达式)&#123;</span><br><span class="line">          布尔表达式结果为true</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          布尔表达式结果为false</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=============if双选择结构============&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="keyword">if</span>(i&gt;=<span class="number">60</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="if多选择结构"><a href="#if多选择结构" class="headerlink" title="if多选择结构"></a>if多选择结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if(布尔表达式1)&#123;</span><br><span class="line">  布尔表达式1结果为true执行代码</span><br><span class="line">&#125;else if(布尔表达式2)&#123;</span><br><span class="line">  布尔表达式2结果为true执行代码</span><br><span class="line">&#125;else if(布尔表达式3)&#123;</span><br><span class="line">  布尔表达式3结果为true执行代码</span><br><span class="line">&#125;else&#123;</span><br><span class="line">  以上布尔表达式都不为true时执行代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">100</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;满分！&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i&gt;=<span class="number">90</span> &amp;&amp; i&lt;<span class="number">100</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;优秀&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i&gt;=<span class="number">60</span> &amp;&amp; i&lt;<span class="number">90</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i&lt;<span class="number">60</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;成绩不合法&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch多选择结构"><a href="#switch多选择结构" class="headerlink" title="switch多选择结构"></a>switch多选择结构</h3><p>case 会穿透 所以要加<strong>break</strong></p><p>switch语句中的变量类型可以是：</p><ol><li>byte、short、int或者是char</li><li>java SE 7开始，switch支持字符串String类型，同时case标签必须为字符串常量或字面量</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">        <span class="keyword">switch</span> (ch)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;优秀&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;良好&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;结构&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;E&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;未知&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;顺序结构&quot;&gt;&lt;a href=&quot;#顺序结构&quot; class=&quot;headerlink&quot; title=&quot;顺序结构&quot;&gt;&lt;/a&gt;顺序结构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Java的基本结构就是顺序结构，除非特别指明，否则就按照顺序一句一句执行。&lt;/li&gt;
&lt;li&gt;顺序结构是最简单的</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java-用户交互scanner</title>
    <link href="http://example.com/2023/02/09/Java-%E5%9F%BA%E7%A1%80-Java-04/"/>
    <id>http://example.com/2023/02/09/Java-%E5%9F%BA%E7%A1%80-Java-04/</id>
    <published>2023-02-09T09:01:45.000Z</published>
    <updated>2023-02-10T03:28:58.853Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scanner对象"><a href="#Scanner对象" class="headerlink" title="Scanner对象"></a>Scanner对象</h2><ol><li>创建一个扫描器对象，用于接收键盘数据</li><li>用next或nextLine方式接收</li><li>关闭扫描器：凡是属于<strong>IO流</strong>（输入输出流）的类如果不关闭会一直占用资源，要养成好习惯用完<strong>关掉</strong>。</li></ol><h2 id="next-和-nextLine-的区别"><a href="#next-和-nextLine-的区别" class="headerlink" title="next 和 nextLine 的区别"></a>next 和 nextLine 的区别</h2><h3 id="next："><a href="#next：" class="headerlink" title="next："></a><strong>next：</strong></h3><ol><li>一定要读取到有效字符后才可以结束输入</li><li>对输入有效字符之前遇到的空白，next()方法会自动将其去掉</li><li>只有输入有效字符后才将其后面的空白作为分割符或者结束符</li><li>next()不能得到带有空格的字符串</li></ol><h3 id="nextLine："><a href="#nextLine：" class="headerlink" title="nextLine："></a><strong>nextLine：</strong></h3><ol><li>以enter为结束符，返回的是输入回车键之前的所有字符</li><li>可以获得空白</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">//使用next方式</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建一个扫描器对象，用于接收键盘数据</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in); <span class="comment">//hello world!</span></span><br><span class="line">        System.out.println(<span class="string">&quot;使用next方式接收：&quot;</span>);</span><br><span class="line">        <span class="comment">//判断用户有没有输入字符串</span></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNext())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的内容为：&quot;</span>+str); <span class="comment">//输入的内容为：hello</span></span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">//用nextLine方式接收</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;用nextLine方式接收：&quot;</span>);<span class="comment">//hello world!</span></span><br><span class="line">        <span class="comment">//判断是否有输入</span></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNext())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的内容为：&quot;</span>+str); <span class="comment">//输入的内容为：hello world!</span></span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="接收整数或者小数"><a href="#接收整数或者小数" class="headerlink" title="接收整数或者小数"></a><strong>接收整数或者小数</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入整数：&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextInt())&#123;</span><br><span class="line">            i = scanner.nextInt();</span><br><span class="line">            System.out.println(<span class="string">&quot;整数：&quot;</span>+i);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;非整数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入小数：&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextFloat())&#123;</span><br><span class="line">            f = scanner.nextFloat();</span><br><span class="line">            System.out.println(<span class="string">&quot;小数：&quot;</span>+ f);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;非小数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Scanner对象&quot;&gt;&lt;a href=&quot;#Scanner对象&quot; class=&quot;headerlink&quot; title=&quot;Scanner对象&quot;&gt;&lt;/a&gt;Scanner对象&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;创建一个扫描器对象，用于接收键盘数据&lt;/li&gt;
&lt;li&gt;用next或ne</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java-运算符</title>
    <link href="http://example.com/2023/02/09/Java-%E5%9F%BA%E7%A1%80-Java-03/"/>
    <id>http://example.com/2023/02/09/Java-%E5%9F%BA%E7%A1%80-Java-03/</id>
    <published>2023-02-09T08:47:32.000Z</published>
    <updated>2023-02-10T03:28:31.916Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java语言支持一下运算符"><a href="#Java语言支持一下运算符" class="headerlink" title="Java语言支持一下运算符"></a>Java语言支持一下运算符</h2><ol><li>算术运算符：+ - * / % ++ –</li><li>赋值运算符：=</li><li>关系运算符：&gt; &lt; &gt;= &lt;= == != instanceof</li><li>逻辑运算符： &amp;&amp; || !</li><li>位运算符：&amp; | ^ ~ &gt;&gt; &lt;&lt; &gt;&gt;&gt;</li><li>条件运算符：? :</li><li>扩展赋值运算符：+= -= *= /=</li></ol><h2 id="算术运算符和赋值运算符"><a href="#算术运算符和赋值运算符" class="headerlink" title="算术运算符和赋值运算符"></a>算术运算符和赋值运算符</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">50</span>;</span><br><span class="line">        System.out.println(a+b); <span class="comment">//30</span></span><br><span class="line">        System.out.println(a-b); <span class="comment">//-10</span></span><br><span class="line">        System.out.println(a*c); <span class="comment">//300</span></span><br><span class="line">        System.out.println(d/a); <span class="comment">//5</span></span><br><span class="line">        System.out.println(a/d); <span class="comment">//0 10/50应该是0.2，但a和d都是int类型 运算过后也是int，0.2，取整后是0</span></span><br><span class="line">        System.out.println(a/(<span class="type">double</span>)d); <span class="comment">//0.2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">3123312313213213L</span>; <span class="comment">//long是整数，尾部加L</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">200</span>;</span><br><span class="line">        <span class="type">short</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="comment">//计算时 相加的数有一个为null，结果为null</span></span><br><span class="line">        System.out.println(a+b+c+d); <span class="comment">//3123312313213426 long</span></span><br><span class="line">        System.out.println(b+c+d);<span class="comment">//213 int</span></span><br><span class="line">        System.out.println(c+d); <span class="comment">//13 int</span></span><br><span class="line">        <span class="comment">//cast 转换</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>自加 ++</strong>  </li><li><strong>自减 –</strong> </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 一元运算符</span></span><br><span class="line"><span class="comment">        *   ++ 自增</span></span><br><span class="line"><span class="comment">        *       a++ 先用了再加</span></span><br><span class="line"><span class="comment">        *       ++a 先加了再用</span></span><br><span class="line"><span class="comment">        *   -- 自减</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> a++;</span><br><span class="line">        System.out.println(a);  <span class="comment">//4</span></span><br><span class="line">        System.out.println(b);  <span class="comment">//3</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> ++a;</span><br><span class="line">        System.out.println(a);  <span class="comment">//5</span></span><br><span class="line">        System.out.println(c);  <span class="comment">//5</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//幂运算 2^3</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">pow</span> <span class="operator">=</span> Math.pow(<span class="number">3</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(pow); <span class="comment">//9.0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 关系运算符</span></span><br><span class="line"><span class="comment">        * 返回的结果：正确、错误（布尔值）</span></span><br><span class="line"><span class="comment">        * 用在if语句，判断</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        System.out.println(a==b); <span class="comment">//false</span></span><br><span class="line">        System.out.println(a!=b); <span class="comment">//true</span></span><br><span class="line">        System.out.println(a&lt;b);  <span class="comment">//true</span></span><br><span class="line">        System.out.println(a&gt;b);  <span class="comment">//false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><ul><li>与  and 两个都为真，结果为真</li><li>或  or  两个中有一个真，结果为真</li><li>非  取反 如果是真，结尾为假；如果是假，结果为真。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">a</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;a&amp;&amp;b:&quot;</span>+(a&amp;&amp;b)); <span class="comment">//a&amp;&amp;b:false</span></span><br><span class="line">        System.out.println(<span class="string">&quot;a||b:&quot;</span>+(a||b)); <span class="comment">//a||b:true</span></span><br><span class="line">        System.out.println(<span class="string">&quot;!a&amp;&amp;b:&quot;</span>+(!(a&amp;&amp;b))); <span class="comment">//!a&amp;&amp;b:true</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">//短路运算</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">d</span> <span class="operator">=</span> (c&lt;<span class="number">4</span>)&amp;&amp;(c++&lt;<span class="number">4</span>); <span class="comment">//因为c&lt;4为假的，所以结果为假，直接输出结果，不再计算后一条式子，所以c不会c++，所以后面输出c为原来的数值</span></span><br><span class="line">        System.out.println(d); <span class="comment">//false</span></span><br><span class="line">        System.out.println(c); <span class="comment">//5</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo06</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * A = 0011 1100</span></span><br><span class="line"><span class="comment">    * B = 0000 1101</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * A&amp;B = 0000 1100  有0则为0</span></span><br><span class="line"><span class="comment">    * A|B = 0011 1101  有1则为1</span></span><br><span class="line"><span class="comment">    * A^B = 0011 0001  相同为0，不相同为1</span></span><br><span class="line"><span class="comment">    * ~B = 1111 0010   1-&gt;0 0-&gt;1</span></span><br><span class="line"><span class="comment">    * </span></span><br><span class="line"><span class="comment">    * 左移 &lt;&lt; *2</span></span><br><span class="line"><span class="comment">    * 右移 &gt;&gt; /2</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">2</span>&lt;&lt;<span class="number">3</span>); <span class="comment">// 16</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h2><p><strong>x ? y : z</strong></p><p>如果x的结果为true，执行y，结果为false，执行z</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Java语言支持一下运算符&quot;&gt;&lt;a href=&quot;#Java语言支持一下运算符&quot; class=&quot;headerlink&quot; title=&quot;Java语言支持一下运算符&quot;&gt;&lt;/a&gt;Java语言支持一下运算符&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;算术运算符：+ - * / % ++ –</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java-变量</title>
    <link href="http://example.com/2023/02/09/Java-%E5%9F%BA%E7%A1%80-Java-02/"/>
    <id>http://example.com/2023/02/09/Java-%E5%9F%BA%E7%A1%80-Java-02/</id>
    <published>2023-02-09T08:32:09.000Z</published>
    <updated>2023-02-10T03:28:17.291Z</updated>
    
    <content type="html"><![CDATA[<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量 =&gt; 可以变化的量</p><ul><li>Java是一种强类型语言，每个变量都必须声明其类型。</li><li>Java变量是程序种最基本的存储单元，其要素包括变量名，变量类型和作用域</li></ul><p>声明变量</p><ul><li>type varName [=value] [{,varName[=value]}]；</li><li>数据类型 变量名  = 值 可以使用逗号隔开来声明多个同类型变量</li></ul><p>注意事项：</p><ol><li>每个变量都有类型，类型可以是基本类型，也可以是引用类型。</li><li>变量名必须是合法的标识符。</li><li>变量声明是一条完整的语句，因此每一个声明都必须以分号结束。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//int a=10,b=20,c=30; //程序可读性 可以这样写，但是不建议这样写。</span></span><br><span class="line">        <span class="comment">//声明变量 =&gt; 变量名，变量类型</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;name&quot;</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">x</span> <span class="operator">=</span> <span class="string">&#x27;x&#x27;</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">pi</span> <span class="operator">=</span> <span class="number">3.1423</span>;</span><br><span class="line">        System.out.println(a);  <span class="comment">//10</span></span><br><span class="line">        System.out.println(b);  <span class="comment">//20</span></span><br><span class="line">        System.out.println(c);  <span class="comment">//30</span></span><br><span class="line">        System.out.println(name);  <span class="comment">//name</span></span><br><span class="line">        System.out.println(x);  <span class="comment">//x</span></span><br><span class="line">        System.out.println(pi); <span class="comment">//3.1423</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h2><ul><li>类变量：static</li><li>实例变量：从属于对象（下面的例子中base.Demo05）</li><li>局部变量</li></ul><p>变量如果不自行进行初始化，会是对应类型的默认值</p><ul><li>数字类型的默认值是0 0.0</li><li>如果是字符串 会是16位制的0000  还是会输出 0</li><li>布尔值类型 默认值是 false</li><li>除了基本类型，其他的默认值都null</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo05</span> &#123;</span><br><span class="line">    <span class="comment">//属性：变量</span></span><br><span class="line">    <span class="comment">//实例变量：从属于对象（base.Demo05）</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="comment">//类变量 static</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">double</span> <span class="variable">salary</span> <span class="operator">=</span> <span class="number">2500</span>;</span><br><span class="line">    <span class="comment">//main方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//局部变量，必须声明和初始化值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        System.out.println(i); <span class="comment">//10</span></span><br><span class="line">        <span class="comment">//实例变量</span></span><br><span class="line">        <span class="type">Demo05</span> <span class="variable">demo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo05</span>();</span><br><span class="line">        System.out.println(demo.age);</span><br><span class="line">        <span class="comment">//输出类变量</span></span><br><span class="line">        System.out.println(salary); <span class="comment">//2500.0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//其他方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//System.out.println(i);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="变量的命名规范"><a href="#变量的命名规范" class="headerlink" title="变量的命名规范"></a>变量的命名规范</h2><ul><li>所有变量、方法、类名:见名知意</li><li>类成员变量：首字母小写和驼峰原则：monthSalary  除了第一个单词以外，后面的单词首字母大写 lastname lastName</li><li>局部变量：首字母小写和驼峰原则</li><li>常量:大写字母和下划线:：MAX VALUE</li><li>类名:首字母大写和驼峰原则：Man，GoodMan</li><li>方法名:首字母小写和驼峰原则：run0，runRun0</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h2&gt;&lt;p&gt;变量 =&amp;gt; 可以变化的量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java是一种强类型语言，每个变量都必须声明其类型。&lt;/li&gt;
&lt;li&gt;Java变</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
</feed>
